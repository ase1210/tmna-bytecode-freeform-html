!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.html_freeform=n():e.html_freeform=n()}(window,(function(){return d=[function(module,exports,__webpack_require__){eval('const { config } = __webpack_require__(1);\r\n\r\nlet vis = looker.plugins.visualizations.add({\r\n    options: {\r\n        html_freeform: {\r\n          type: "string",\r\n          label: "Freeform HTML. Use strings like ~1, ~2, or ~3 to access data inside the html",\r\n          display: "text",\r\n          default: "<div>Your custom HTML</div>"\r\n        },\r\n   \r\n      styles_freeform: {\r\n        type: "string",\r\n        label: "Freeform Styles",\r\n        display: "text",\r\n        default: `@font-face {\r\n          font-family: Open Sans;\r\n          src: url( https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0b.woff2 );\r\n        }\r\n        div {\r\n          background-color: white;\r\n          text-align: center;\r\n        }`\r\n      },\r\n        use_html_from_fields: {\r\n          type: "boolean",\r\n          label: "Use html from fields",\r\n          default: false\r\n      },\r\n        current_page: {\r\n          type:"number",\r\n          label: "Current Page of Viz",\r\n          default:1\r\n        },\r\n        rows_per_page: {\r\n          type:"number",\r\n          label:"Rows per Page",\r\n          default:5\r\n        },\r\n        pagination_toggle: {\r\n          type:"boolean",\r\n          label:"Pagination?",\r\n          default:true\r\n        }\r\n  },\r\n\r\n\tcreate: function(element, config){\r\n    element.innerHTML = `<div class="html_freeform">Rendering...</div>`;\r\n    },\r\n\tupdateAsync: function(data, element, config, queryResponse, details, doneRendering){\r\n      console.log("current page",config.current_page)\r\n        const totalPages = Math.ceil(data.length / config.rows_per_page);\r\n\r\n        console.log(data);\r\n        \r\n        element.innerHTML = \'\'\r\n        let measure_fields = queryResponse.fields.measure_like.map((field) => {\r\n            // let key =    field.label\r\n            return field.name\r\n        })\r\n        let dimension_fields = queryResponse.fields.dimension_like.map((field) => {\r\n          // let key =    field.label\r\n          return field.name\r\n         \r\n      })\r\n        let fields = dimension_fields.concat(measure_fields)\r\n\r\n        let existingStyleRef =  document.getElementById("freeformStyle") \r\n        if (existingStyleRef) existingStyleRef.remove()\r\n        \r\n        var styleEl = document.createElement(\'style\');\r\n        styleEl.setAttribute(\'type\',"text/css")\r\n        styleEl.setAttribute(\'id\',"freeformStyle")\r\n        styleEl.innerHTML = config.styles_freeform\r\n\r\n        document.head.appendChild(styleEl);\r\n\r\n        let html = \'\'\r\n        // let firstRow = 1\r\n         let lastRow = config.current_page * config.rows_per_page;\r\n         let firstRow = lastRow - config.rows_per_page;\r\n        // for (var i=1; data[i] > 0; i++){\r\n        //   console.log("test", data[i])\r\n        // }\r\n        let filteredData=data;\r\n        if (config.pagination_toggle){\r\n          filteredData = data.filter((d,i) => {\r\n              return i < lastRow && firstRow <= i\r\n          })\r\n        }\r\n\r\n\r\n        for(var row of filteredData) {\r\n          let rowHtml = config.html_freeform || \' \';\r\n          fields.map((field, i) => {\r\n            let cellHtml = \' \'\r\n            var cell = row[field];\r\n            cellHtml = LookerCharts.Utils.textForCell(cell);\r\n            rowHtml = rowHtml.replace(`~${i+1}`\r\n            , cellHtml)\r\n          })\r\n          html = html + rowHtml;\r\n        }\r\n\r\n        if (config.pagination_toggle) {\r\n          let firstPage = config.current_page == 1? "disabled":"";\r\n          let lastPage = config.current_page == totalPages? "disabled":"";\r\n          console.log(config.current_page, totalPages)\r\n          const test = `\r\n          <div style="position:absolute; display:flex; bottom:0;">\r\n            <div>\r\n              <button ${firstPage} id="prev">Prev</button>\r\n            </div>\r\n            <div>${config.current_page}</div>\r\n            <div>\r\n              <button ${lastPage} id="next">Next</button>\r\n            </div>\r\n          </div>\r\n          `\r\n          html += test;\r\n        }\r\n\r\n       element.innerHTML = html;\r\n\r\n       \r\n       document.getElementById("next").addEventListener("click", () => nextPage(config));\r\n       document.getElementById("prev").addEventListener("click", () => prevPage(config));\r\n       const nextPage = (config) => {\r\n          let newPage = config.current_page + 1\r\n          this.trigger("updateConfig", [{current_page:newPage}])\r\n          config.current_page = newPage\r\n          this.updateAsync(data,element,config,queryResponse,details,doneRendering)\r\n        }\r\n        const prevPage = (config) => {\r\n          let newPage = config.current_page - 1\r\n          this.trigger("updateConfig", [{current_page:newPage}])\r\n          config.current_page = newPage\r\n          this.updateAsync(data,element,config,queryResponse,details,doneRendering)\r\n        }\r\n\t\tdoneRendering()\r\n\t}  \r\n});\r\n\r\n\r\n\n\n//# sourceURL=webpack://%5Bname%5D/./src/visualizations/html_freeform.js?')},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://%5Bname%5D/./node_modules/process/browser.js?")}],e={},f.m=d,f.c=e,f.d=function(e,n,r){f.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:r})},f.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},f.t=function(e,n){if(1&n&&(e=f(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(f.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var t in e)f.d(r,t,function(n){return e[n]}.bind(null,t));return r},f.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return f.d(n,"a",n),n},f.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},f.p="",f(f.s=0);function f(n){if(e[n])return e[n].exports;var r=e[n]={i:n,l:!1,exports:{}};return d[n].call(r.exports,r,r.exports,f),r.l=!0,r.exports}var d,e}));